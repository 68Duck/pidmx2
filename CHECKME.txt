
Don't include create light types as probably not needed

In coursework writeup, include blackout button, select all lights and select light types as added features.

Potentially mention robust design where values can only be changed through functions which have validation.

Have effects as a property of the light. In send effects to lights (a function called in the main run loop), update the values of the channels depending on the current effect values.
These effect values should be stored in a dictionary so other effects can be added later so the dictionary will contain an effect value and the name of the effect e.g. {"chaser":50,"rainbow":0}

Have change colour and change intensity methods for all light classes so it can be generalised more easily

Is the accounts table in 3NF if the username is unique?

For creating error windows later use "ERROR" at the start of every error message.

Check pressing enter for ok/submit if present for all windows

Possibly put in stakeholder input that the logon/create account is not obvious what to input. Also make password input dots.
Also for stakeholder input add extra faders since 24 is not that many

Add confirm window to slider panel window removing light and deleting rigs for open_rig window
USE PREMADE CONFIRM WINDOW USING QTWINDOW thing

For testing logon window try to fix invalid characters test since no characters are invalid?

Check if slider pannel window needs the select buttons since not used?

Potentially change saving rig names since rigs can be of the same name if they are within different accounts.

Make sure all sections are tested to the test plan

I haven't worried about deselecting lights when sequences are running yet.

Error when deleting the rig fixture faders remain selected.

Potentially fix when rigs/playbacks/locations are deleted, it should check that it is deleting the rig/location/playback for that account rather then just deleting the first item with the same name since there can be duplicate names for different accounts
